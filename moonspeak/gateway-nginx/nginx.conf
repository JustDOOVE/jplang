# see: https://developpaper.com/debugging-nginx-with-docker/
# see: https://nginx.org/en/docs/ngx_core_module.html#error_log
error_log stderr error;

events {
  worker_connections  1024;
}

http {
    # see:
    # https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms

    # when running on docker-compose:
    # see: https://stackoverflow.com/questions/57937222/502-bad-gateway-nginx-no-resolver-defined-to-resolve
    resolver 127.0.0.11 1.1.1.1 8.8.8.8;

    # extra config:
    # hardcode .TEST domains, for development
    include conf.d/*.conf;

    #====================================
    server {
        server_name  "~^.+[.](?P<domain>.+)$";
        listen       0.0.0.0:80 default_server;

        # SSL config start
        listen 0.0.0.0:443 ssl;

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/moonspeak.$domain/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/moonspeak.$domain/privkey.pem;

        # # Redirect non-https traffic to https
        # if ($scheme != "https") {
        #     return 301 https://$host$request_uri;
        # }
        # SSL config end

        # Pass the original header, so router service can know how to set <base> tag
        proxy_set_header Host    $host:$proxy_port;

        # handle redirects that use Location:
        # take part 0 of domain name, before first DOT, and add it as first part of PATH
        # then add the path as-is
        # note: we can not use "$domain" because "$" is interpreted as end of regex
        proxy_redirect ~*http://([^.]+)[.]moonspeak[.][a-z]+/(.+)$ /$1/$2;

        #==============================
        # deploy needs direct access to user's connection for request limiting
        location /deploy/ {
            return 301 http://deploy.moonspeak.$domain$request_uri;
        }

        #==============================
        # landing page
        location = / {
            return 301 /landing$request_uri;
        }

        location /landing/ {
            proxy_pass http://router.moonspeak.$domain/router/node$request_uri;
        }

        #==============================
        # features
        location /plugins/ {
            # repeat "plugins" twice, first = service dns name, second = folder name
            proxy_pass http://router.moonspeak.$domain/router/node/plugins$request_uri;
        }

        location /suggestions/ {
            proxy_pass http://router.moonspeak.$domain/router/node$request_uri;
        }

        location /synonyms/ {
            proxy_pass http://router.moonspeak.$domain/router/node$request_uri;
        }

        location /plus/ {
            proxy_pass http://router.moonspeak.$domain/router/node$request_uri;
        }

        #==============================
        # dynamic routes
        location /router/ {
            proxy_pass http://router.moonspeak.$domain$request_uri;
        }
    }
}
