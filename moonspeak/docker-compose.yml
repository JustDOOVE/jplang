#
# ALSO MUST SEE ./docker-compose.override.yml
# the override config is applied automatically by docker-compose
#
version: "3"

volumes:
  # global volume used to share unix sockets
  unixsocks:
    # specify name to avoid default docker-compose prefixing
    name: unixsocks

networks:
  # global network to share between all services (not all services bind to unix sockets right now)
  moonspeaknet:
    # specify name to avoid default docker-compose prefixing
    name: moonspeaknet

services:
  #===================================
  gateway:
    image: "temachpool/moonspeak-gateway:${TAG:-latest}"
    volumes:
      - unixsocks:/etc/unixsocks
    networks:
      - moonspeaknet

  router:
    image: "temachpool/moonspeak-router:${TAG:-latest}"
    volumes:
      - unixsocks:/opt/moonspeak/unixsocks
    networks:
      - moonspeaknet
    environment:
      # the router inserts reference to hostname into each feature via <base> tag
      # this supplies the correct name, the field is re-defined in override configs
      MOONSPEAK_DOMAIN: ""
      # turn off debug features
      MOONSPEAK_DEV_MODE: ""
      RUST_LOG: "router=info"

  manager:
    image: "temachpool/moonspeak-manager:${TAG:-latest}"
    volumes:
      - unixsocks:/opt/moonspeak/unixsocks
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - moonspeaknet
    environment:
      # the manager writes configuration for graph service which has absolute urls
      # this supplies the correct name, the field is re-defined in override configs
      MOONSPEAK_DOMAIN: ""
      MOONSPEAK_DEPLOY_SECRET: "secret"
      # set debug to off
      PYTHON_ON_WHALES_DEBUG: ""


  #===================================
  landing:
    image: "temachpool/moonspeak-landing:${TAG:-latest}"
    volumes:
      - unixsocks:/etc/unixsocks
    networks:
      - moonspeaknet

  synonyms:
    image: "temachpool/moonspeak-synonyms:${TAG:-latest}"
    volumes:
      - unixsocks:/opt/moonspeak/unixsocks
    networks:
      - moonspeaknet
    environment:
      GUNICORN_CMD_ARGS: " --bind='0.0.0.0:80' --bind='unix:/opt/moonspeak/unixsocks/synonyms.sock' "

  suggestions:
    image: "temachpool/moonspeak-suggestions:${TAG:-latest}"
    volumes:
      - unixsocks:/opt/moonspeak/unixsocks
    networks:
      - moonspeaknet
    environment:
      MOONSPEAK_PORT: 80

  #
  #
  #  keycloak:
  #    image: quay.io/keycloak/keycloak:20.0.3
  #    container_name: keycloak
  #    ports:
  #      - "8080:8080"
  #    environment:
  #      KEYCLOAK_ADMIN: admin
  #      KEYCLOAK_ADMIN_PASSWORD: admin
  #    command: start-dev
  #
  # portainer:
  #   # See README.md in portainer dir for more info on working with portainer
  #   image: "temachpool/moonspeak-portainer:${TAG:-latest}"
  #   ports:
  #     - "9443:9443"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   # args get appended to ENTRYPOINT, see https://stackoverflow.com/questions/37366857/how-to-pass-arguments-to-entrypoint-in-docker-compose-yml
  #   # password "adminadminadmin" because portainer has security demands
  #   command: "--templates http://localhost:9000/templates.json --admin-password ${MOONSPEAK_PORTAINER_ADMIN_PASSWORD:-$2y$05$xZBIExnGy77DNO6QXoeTFei4JeVtjzaTj8ckYPb9hZQpFlqAK1Piu}"
  #   # command: --templates http://localhost:9000/templates.json
  #
  # swarmpit:
  #   image: "temachpool/moonspeak-portainer:${TAG:-latest}"
  #   ports:
  #     - "9443:9443"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  # docker run -it --rm \
  # --name swarmpit-installer \
  # --volume /var/run/docker.sock:/var/run/docker.sock \
  # swarmpit/install:1.9

