# docker image config file: https://github.com/spujadas/lighttpd-docker/blob/master/etc/lighttpd/lighttpd.conf
# config file syntax: https://redmine.lighttpd.net/projects/1/wiki/docs_configuration
# config options and values: https://redmine.lighttpd.net/projects/lighttpd/wiki/Docs_ConfigurationOptions

# bind on multiple locations: https://redmine.lighttpd.net/projects/lighttpd/wiki/FrequentlyAskedQuestions#How-do-I-bind-to-more-than-one-address 
server.bind = CWD + "/" + env.MOONSPEAK_UNIXSOCK
$SERVER["socket"] == ":" + env.MOONSPEAK_PORT { }

# enable during dev mode
# debug.log-request-handling = ""
# debug.log-condition-handling = ""
# debug.log-file-not-found = ""
# debug.log-response-header = ""

# At the very least, mod_access and mod_accesslog should be enabled.
# All other modules should only be loaded if necessary.
# NOTE: the order of modules is important.
server.modules = (
    "mod_access",
    "mod_accesslog",
    "mod_rewrite",
    "mod_redirect",
    "mod_alias",
#    "mod_cml",
#    "mod_trigger_b4_dl",
#    "mod_auth",
#    "mod_status",
#    "mod_setenv",
#    "mod_proxy",
#    "mod_simple_vhost",
#    "mod_evhost",
#    "mod_userdir",
#    "mod_deflate",
#    "mod_ssi",
#    "mod_usertrack",
#    "mod_expire",
#    "mod_secdownload",
#    "mod_rrdtool",
#    "mod_webdav",
)
# }}}

url.redirect-code = 307

server.indexfiles = ("index.html")
include CWD + "/mime-types.conf" 

# log access to stderr, works for docker
accesslog.filename = "/dev/stderr"

# From official docs: https://redmine.lighttpd.net/projects/1/wiki/docs_configuration
# testing if a variable has been set is NOT possible
# you need to create a script in a real programming language and then use include_shell
include_shell CWD + "/set_moonspeak_hud_config_json.sh"


#=============================
# Request routing

$HTTP["url"] == "/" {
    # language check order:
    # 0 - what language cookie you have (allow special "localhost" lang)
    $REQUEST_HEADER["cookie"] =~ "lang=([a-z]+)" {
        url.redirect = ("/" => "/%1/index.html")
    } 
    # 1 - what does accept_language header have
    else $REQUEST_HEADER["accept-language"] =~ "^([a-zA-Z]{2,3})" {
        url.redirect = ("/" => "/%1/index.html")
    } 
    # 2 - what domain are you targetting, useful for tools that normally dont supply accept_language header
    else $REQUEST_HEADER["host"] =~ "[.]([a-z]+)(\:[0-9]*)?$" {
        url.redirect = ("/" => "/%1/index.html")
    } 
    # finally use english by default
    else {
        url.redirect = ("/" => "/en/index.html")
    }
}

# in dev mode, language dirs may be absent, then redirect to /localhost/ via rewrite
url.rewrite-if-not-file = ( "^/[a-z]{2,3}/index.html$" => "/redirectToLocalhost" )
url.redirect += ( "/redirectToLocalhost" => "/localhost/index.html" )

# dev mode only, /localhost/ points to ./frontend/src/
alias.url = ( "/localhost/" => CWD + "/frontend/src/" )

# default url handle
server.document-root = CWD + "/frontend/dist/" 
